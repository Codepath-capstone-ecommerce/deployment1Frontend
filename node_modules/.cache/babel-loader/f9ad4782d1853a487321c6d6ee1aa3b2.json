{"ast":null,"code":"import _slicedToArray from \"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nvar useWindowSize = function useWindowSize() {\n  var _useState = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  useEffect(function () {\n    window.addEventListener('resize', resizeHandler);\n    return function () {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n\n  var resizeHandler = function resizeHandler() {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  return windowSize;\n};\n\nexport default useWindowSize;","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/react-use-window-size/index.js"],"names":["useState","useEffect","useWindowSize","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","addEventListener","resizeHandler","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,kBAAoCF,QAAQ,CAAC;AAAEG,IAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,IAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,YAAM;AACXP,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAMA,MAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BF,IAAAA,aAAa,CAAC;AAAEN,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,KAAD,CAAb;AACD,GAFD;;AAGA,SAAOC,UAAP;AACD,CAbD;;AAeA,eAAeN,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n  const resizeHandler = () => {\n    setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n  };\n  return windowSize;\n};\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}