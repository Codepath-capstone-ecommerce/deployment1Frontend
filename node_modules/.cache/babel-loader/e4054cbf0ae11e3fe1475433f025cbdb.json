{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { Button, Typography, Card, CardContent, CardMedia } from '@material-ui/core';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CartCard from '../CartCard/CartCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s();\n\n  const {\n    appState\n  } = useAppStateContext();\n  const [isCartFilled, setCart] = useState(false); // if (appState.cart.length !==0){\n  //     setCart(true)\n  // }\n  // const emptyCart = () =>{\n  //     setCart(false)\n  // }\n\n  const formatCart = () => {\n    const obj = {};\n\n    for (let i = 0; i < appState.cart.length; i++) {\n      if (appState.cart[i] in obj) {\n        obj[appState.cart[i]] += 1;\n      } else {\n        obj[appState.cart[i]] = 1;\n      }\n    }\n\n    return obj;\n  };\n\n  const obj = formatCart();\n  const items = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    items.push({\n      name: key,\n      quantity: value\n    });\n  }\n\n  const cart = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    let obj = {};\n    obj[key] = value;\n    cart.push(obj);\n  }\n\n  const createOrder = async () => {\n    console.log(cart);\n    const {\n      data,\n      error\n    } = await apiClient.createOrder({\n      \"cart\": {\n        address: \"123 Street\",\n        products: cart\n      }\n    }); // if (error){\n    //   setErrors((e) => ({ ...e, form:error}))\n    // }\n  }; // <Card key={idx}>\n  //     <CardContent>\n  //     <Typography>Item: {item.name}</Typography>\n  //     <Typography>Quantity: {item.quantity}</Typography>\n  // </CardContent>\n  // </Card>\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), items.length === 0 ? \"Cart is empty\" : items.map((item, idx) => /*#__PURE__*/_jsxDEV(CartCard, {\n      product: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createOrder,\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Clear Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"BmLXN7Bf5WI3H+o7keMm6Hwnwto=\", false, function () {\n  return [useAppStateContext];\n});\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Cart/Cart.js"],"names":["useAppStateContext","Button","Typography","Card","CardContent","CardMedia","apiClient","useState","useEffect","axios","CartCard","Cart","appState","isCartFilled","setCart","formatCart","obj","i","cart","length","items","key","value","Object","entries","push","name","quantity","createOrder","console","log","data","error","address","products","map","item","idx"],"mappings":"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","sourcesContent":["import { useAppStateContext } from '../../contexts/appStateContext';\nimport { Button, Typography, Card,CardContent,CardMedia } from '@material-ui/core';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport CartCard from '../CartCard/CartCard';\n\nexport default function Cart() {\n    const { appState } = useAppStateContext()\n    const [isCartFilled, setCart] = useState(false)\n    \n    // if (appState.cart.length !==0){\n    //     setCart(true)\n    // }\n\n    // const emptyCart = () =>{\n    //     setCart(false)\n    // }\n\n    const formatCart = () => {\n        const obj = {}\n        for (let i = 0; i < appState.cart.length; i++) {\n            if (appState.cart[i] in obj) {\n                obj[appState.cart[i]] += 1\n            } else {\n                obj[appState.cart[i]] = 1\n            }\n        }\n\n        return obj\n    }\n\n    const obj = formatCart()\n    const items = []\n    for (const [key, value] of Object.entries(obj)) {\n        items.push({ name: key, quantity: value });\n    }\n\n    const cart = []\n    for (const [key, value] of Object.entries(obj)) {\n        let obj = {}\n        obj[key] = value\n        cart.push(obj);\n    }\n\n    const createOrder = async () => {\n        console.log(cart)\n        const { data, error } = await apiClient.createOrder(\n            {\n                \"cart\": {\n                    address: \"123 Street\",\n                    products: cart\n                }\n            }\n        )\n        // if (error){\n        //   setErrors((e) => ({ ...e, form:error}))\n        // }\n    }\n    // <Card key={idx}>\n//     <CardContent>\n//     <Typography>Item: {item.name}</Typography>\n//     <Typography>Quantity: {item.quantity}</Typography>\n// </CardContent>\n\n// </Card>\n\n    return (\n        <div>\n            <Typography>Your Cart</Typography>\n            {items.length === 0 ? \"Cart is empty\" : items.map((item, idx) => (\n                <CartCard product={item}></CartCard>\n            ))}\n            <Button onClick={createOrder}>Place Order</Button>\n            <Button>Clear Cart</Button>\n        </div>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}