{"ast":null,"code":"import _defineProperty from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import Button from'@material-ui/core/Button';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import AttachMoneyIcon from'@material-ui/icons/AttachMoney';import AccountCircleIcon from'@material-ui/icons/AccountCircle';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import{useAppStateContext}from'../../contexts/appStateContext';import{useNavigate,Link}from\"react-router-dom\";import classnames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({list:{width:250},fullList:{width:'auto'},customButton:{border:\"3px solid\",borderColor:\"#2EDBFD !important\",backgroundColor:\"#000000\",color:\"white !important\",\"&:hover\":{color:\"black !important\",backgroundColor:\"#2EDBFD\"}}});export default function UserDrawer(){var _useAppStateContext=useAppStateContext(),appState=_useAppStateContext.appState;var classes=useStyles();var navigate=useNavigate();var _React$useState=React.useState({right:false}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var toggleDrawer=function toggleDrawer(anchor,open){return function(event){if(event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},anchor,open)));};};var myRewards=function myRewards(){navigate(\"/rewards\");};var myAccount=function myAccount(){navigate(\"/accountProfile\");};var list=function list(anchor){return/*#__PURE__*/_jsx(\"div\",{className:clsx(classes.list,_defineProperty({},classes.fullList,anchor==='top'||anchor==='bottom')),role:\"presentation\",onClick:toggleDrawer(anchor,false),onKeyDown:toggleDrawer(anchor,false),children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsxs(ListItemIcon,{children:[/*#__PURE__*/_jsx(AttachMoneyIcon,{}),\" \"]}),/*#__PURE__*/_jsx(Button,{onClick:myRewards,children:\"My Rewards\"})]},\"My Rewards\"),/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(AccountCircleIcon,{})}),/*#__PURE__*/_jsx(Button,{onClick:myAccount,children:\"My Profile\"})]},\"My Profile\")]})});};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:toggleDrawer('right',true),className:classnames(classes.customButton,\"glow-button\"),children:appState.first_name}),/*#__PURE__*/_jsx(Drawer,{anchor:'right',open:state['right'],onClose:toggleDrawer('right',false),children:list('right')})]},appState.first_name);}","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/deployment1Frontend/src/components/UserDrawer/UserDrawer.js"],"names":["React","clsx","makeStyles","Drawer","Button","List","ListItem","AttachMoneyIcon","AccountCircleIcon","ListItemIcon","ListItemText","useAppStateContext","useNavigate","Link","classnames","useStyles","list","width","fullList","customButton","border","borderColor","backgroundColor","color","UserDrawer","appState","classes","navigate","useState","right","state","setState","toggleDrawer","anchor","open","event","type","key","myRewards","myAccount","first_name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { useNavigate, Link } from \"react-router-dom\"\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    customButton: {\n        border: \"3px solid\",\n        borderColor: \"#2EDBFD !important\",\n        backgroundColor: \"#000000\",\n        color: \"white !important\",\n        \"&:hover\": {\n          color: \"black !important\",\n          backgroundColor: \"#2EDBFD\",\n        }\n      }\n});\n\nexport default function UserDrawer() {\n    const { appState } = useAppStateContext()\n    const classes = useStyles();\n    const navigate = useNavigate()\n    const [state, setState] = React.useState({\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const myRewards = () => {\n        navigate(\"/rewards\")\n    }\n\n    const myAccount = () => {\n        navigate(\"/accountProfile\")\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                    <ListItem button key=\"My Rewards\">\n                        <ListItemIcon><AttachMoneyIcon /> </ListItemIcon>\n                        <Button onClick={myRewards} >My Rewards</Button>\n                        {/* <ListItemText primary={text} /> */}\n                    </ListItem>\n                    <ListItem button key=\"My Profile\">\n                        <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n                        <Button onClick={myAccount} >My Profile</Button>\n                        {/* <ListItemText primary={text} /> */}\n                    </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <React.Fragment key={appState.first_name}>\n            <Button onClick={toggleDrawer('right', true)} className={classnames(classes.customButton, \"glow-button\")}>{appState.first_name}</Button>\n            <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n                {list('right')}\n            </Drawer>\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}