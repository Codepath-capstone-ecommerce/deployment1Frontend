{"ast":null,"code":"import _objectSpread from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useAppStateContext}from'../../contexts/appStateContext';import{Container,Button,Typography,Card,CardContent,CardMedia,Grid,Box}from'@material-ui/core';import apiClient from'../../services/apiClient';import{useState,useEffect}from\"react\";import axios from\"axios\";import CartCard from'../CartCard/CartCard';import NavBar from'../NavBar/NavBar';import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Cart(){var _useAppStateContext=useAppStateContext(),appState=_useAppStateContext.appState,setAppState=_useAppStateContext.setAppState,vendorState=_useAppStateContext.vendorState,setvendorState=_useAppStateContext.setvendorState;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCartFilled=_useState2[0],setCart=_useState2[1];var navigate=useNavigate();// if (appState.cart.length !==0){\n//     setCart(true)\n// }\n// console.log(appState.cart)\nvar emptyCart=function emptyCart(){setAppState(function(a){return _objectSpread(_objectSpread({},a),{},{cart:[],review:[]});});};var formatCart=function formatCart(){var obj={};for(var i=0;i<appState.cart.length;i++){if(appState.cart[i]in obj){obj[appState.cart[i]]+=1;}else{obj[appState.cart[i]]=1;}}return obj;};// console.log(prices)\nvar obj=formatCart();var items=[];for(var _i=0,_Object$entries=Object.entries(obj);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];items.push({name:key,quantity:value});}var cart=[];for(var _i2=0,_Object$entries2=Object.entries(obj);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key=_Object$entries2$_i[0],_value=_Object$entries2$_i[1];var _obj={};_obj[_key]=_value;cart.push(_obj);}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(Grid,{children:[/*#__PURE__*/_jsx(Typography,{children:\"My Cart\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){navigate('/menu');},children:\"Add more items\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:\"Item\"}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:\"Price\"}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:\"Quantity\"})]})]}),/*#__PURE__*/_jsx(Grid,{children:items.length===0?\"Cart is empty\":items.map(function(item,idx){return/*#__PURE__*/_jsx(CartCard,{product:item},idx);})}),/*#__PURE__*/_jsx(Button,{onClick:emptyCart,children:\"Clear Cart\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){navigate('/checkout');},children:\"Checkout Order\"})]});}","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/deployment1Frontend/src/components/Cart/Cart.js"],"names":["useAppStateContext","Container","Button","Typography","Card","CardContent","CardMedia","Grid","Box","apiClient","useState","useEffect","axios","CartCard","NavBar","useNavigate","Cart","appState","setAppState","vendorState","setvendorState","isCartFilled","setCart","navigate","emptyCart","a","cart","review","formatCart","obj","i","length","items","Object","entries","key","value","push","name","quantity","map","item","idx"],"mappings":"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","sourcesContent":["import { useAppStateContext } from '../../contexts/appStateContext';\nimport { Container, Button, Typography, Card, CardContent, CardMedia, Grid, Box } from '@material-ui/core';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport CartCard from '../CartCard/CartCard';\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Cart() {\n    const { appState, setAppState, vendorState, setvendorState } = useAppStateContext()\n    const [isCartFilled, setCart] = useState(false)\n    const navigate = useNavigate()\n    // if (appState.cart.length !==0){\n    //     setCart(true)\n    // }\n\n    // console.log(appState.cart)\n    const emptyCart = () => {\n        setAppState((a) => (\n            {\n                ...a,\n                cart: [],\n                review: []\n            }\n        ))\n    }\n\n    const formatCart = () => {\n        const obj = {}\n        for (let i = 0; i < appState.cart.length; i++) {\n            if (appState.cart[i] in obj) {\n                obj[appState.cart[i]] += 1\n            } else {\n                obj[appState.cart[i]] = 1\n            }\n        }\n\n        return obj\n    }\n\n    // console.log(prices)\n    const obj = formatCart()\n    const items = []\n    for (const [key, value] of Object.entries(obj)) {\n        items.push({ name: key, quantity: value });\n    }\n\n    const cart = []\n    for (const [key, value] of Object.entries(obj)) {\n        let obj = {}\n        obj[key] = value\n        cart.push(obj);\n    }\n\n    return (\n        <Container>\n            <NavBar></NavBar>\n            <Grid>\n                <Typography>My Cart</Typography>\n                <Button onClick={() => { navigate('/menu') }}>Add more items</Button>\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        Item\n                    </Grid>\n                    <Grid item xs={4}>\n                        Price\n                    </Grid>\n                    <Grid item xs={4}>\n                        Quantity\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid >\n                {items.length === 0 ? \"Cart is empty\" : items.map((item, idx) => (\n                    <CartCard product={item} key={idx}></CartCard>\n                ))}\n            </Grid>\n            <Button onClick={emptyCart}>Clear Cart</Button>\n            <Button onClick={() => { navigate('/checkout') }}>Checkout Order</Button>\n        </Container>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}