{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport MenuCard from \"../MenuCard/MenuCard\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Button, colors, ListItem, ListItemText, List, Card, CardActions, Box } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavBar from \"../NavBar/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient'; //class should import appstate that contains products\n//loop through each product to create a menucard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu() {\n  _s();\n\n  const {\n    appState,\n    setAppState\n  } = useAppStateContext();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [products, setProduct] = useState([]);\n  const [active, setActive] = useState({\n    \"Pizza\": false,\n    \"Drink\": false,\n    \"misc\": false\n  });\n  const categories = ['Pizza', 'Drink', 'misc'];\n\n  const checkout = () => {\n    navigate('/cart');\n  };\n\n  const getCat = e => {\n    let obj = {};\n\n    for (const [key, value] of Object.entries(active)) {\n      if (key === e.target.innerHTML) {\n        obj[key] = true;\n      } else {\n        obj[key] = false;\n      }\n    }\n\n    setActive(obj);\n\n    const fetchData = async () => {\n      try {\n        var _productRes$data;\n\n        const productRes = await apiClient.fetchProductsByCategory({\n          category: e.target.innerHTML\n        });\n\n        if (productRes === null || productRes === void 0 ? void 0 : (_productRes$data = productRes.data) === null || _productRes$data === void 0 ? void 0 : _productRes$data.products) {\n          setProduct(productRes.data.products);\n        }\n      } catch (err) {\n        setError(err);\n      }\n    };\n\n    fetchData();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        var _productRes$data2;\n\n        const productRes = await axios.get(\"http://localhost:3001/products/list\");\n\n        if (productRes === null || productRes === void 0 ? void 0 : (_productRes$data2 = productRes.data) === null || _productRes$data2 === void 0 ? void 0 : _productRes$data2.products) {\n          setProduct(productRes.data.products);\n        }\n      } catch (err) {\n        console.log({\n          err\n        });\n        setError(err);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: categories.map((cat, idx) => /*#__PURE__*/_jsxDEV(Box, {\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: active.cat ? /*#__PURE__*/_jsxDEV(CardActions, {\n              style: {\n                backgroundColor: \"#2ed9fb\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: getCat,\n                children: cat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: getCat,\n                children: cat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        container: true,\n        children: products.map((product, idx) => /*#__PURE__*/_jsxDEV(Box, {\n          mx: 2,\n          children: /*#__PURE__*/_jsxDEV(MenuCard, {\n            product: product\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"OjDeJGwYXsAgLnvPsjQzpgQoWXQ=\", false, function () {\n  return [useAppStateContext, useNavigate];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Menu/Menu.js"],"names":["MenuCard","axios","useState","useEffect","Button","colors","ListItem","ListItemText","List","Card","CardActions","Box","Grid","makeStyles","NavBar","useNavigate","useAppStateContext","apiClient","Menu","appState","setAppState","navigate","error","setError","isLoading","setIsLoading","products","setProduct","active","setActive","categories","checkout","getCat","e","obj","key","value","Object","entries","target","innerHTML","fetchData","productRes","fetchProductsByCategory","category","data","err","get","console","log","map","cat","idx","backgroundColor","product"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,IAAjD,EAAuDC,IAAvD,EAA6DC,WAA7D,EAA0EC,GAA1E,QAAqF,mBAArF;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAGA;AACA;;;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BJ,kBAAkB,EAApD;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwB,QAAD,EAAWC,UAAX,IAAyBzB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC;AACjC,aAAQ,KADyB;AAEjC,aAAQ,KAFyB;AAGjC,YAAO;AAH0B,GAAD,CAApC;AAKA,QAAM4B,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAAnB;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBV,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,GAFD;;AAIA,QAAMW,MAAM,GAAIC,CAAD,IAAO;AAClB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeV,MAAf,CAA3B,EAAmD;AAC/C,UAAIO,GAAG,KAAKF,CAAC,CAACM,MAAF,CAASC,SAArB,EAA+B;AAC3BN,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,IAAX;AACH,OAFD,MAGI;AACAD,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,KAAX;AACH;AACJ;;AACDN,IAAAA,SAAS,CAACK,GAAD,CAAT;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC1B,UAAI;AAAA;;AACA,cAAMC,UAAU,GAAG,MAAMzB,SAAS,CAAC0B,uBAAV,CAAkC;AAAEC,UAAAA,QAAQ,EAAEX,CAAC,CAACM,MAAF,CAASC;AAArB,SAAlC,CAAzB;;AACA,YAAIE,UAAJ,aAAIA,UAAJ,2CAAIA,UAAU,CAAEG,IAAhB,qDAAI,iBAAkBnB,QAAtB,EAAgC;AAC5BC,UAAAA,UAAU,CAACe,UAAU,CAACG,IAAX,CAAgBnB,QAAjB,CAAV;AACH;AACJ,OALD,CAKE,OAAOoB,GAAP,EAAY;AACVvB,QAAAA,QAAQ,CAACuB,GAAD,CAAR;AACH;AACJ,KATD;;AAUAL,IAAAA,SAAS;AACZ,GAtBD;;AAwBAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsC,SAAS,GAAG,YAAY;AAC1BhB,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AAAA;;AACA,cAAMiB,UAAU,GAAG,MAAMzC,KAAK,CAAC8C,GAAN,CAAU,qCAAV,CAAzB;;AACA,YAAIL,UAAJ,aAAIA,UAAJ,4CAAIA,UAAU,CAAEG,IAAhB,sDAAI,kBAAkBnB,QAAtB,EAAgC;AAC5BC,UAAAA,UAAU,CAACe,UAAU,CAACG,IAAX,CAAgBnB,QAAjB,CAAV;AACH;AAEJ,OAND,CAME,OAAOoB,GAAP,EAAY;AACVE,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,UAAAA;AAAF,SAAZ;AACAvB,QAAAA,QAAQ,CAACuB,GAAD,CAAR;AACH;;AAEDrB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAdD;;AAgBAgB,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,cAAc,EAAC,cAA/B;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACKX,UAAU,CAACoB,GAAX,CAAe,CAACC,GAAD,EAAMC,GAAN,kBACZ,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI,QAAC,IAAD;AAAA,sBACKxB,MAAM,CAACuB,GAAP,gBACG,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE;AAAEE,gBAAAA,eAAe,EAAE;AAAnB,eAApB;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAErB,MAAjB;AAAA,0BAA0BmB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADH,gBAIG,QAAC,WAAD;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEnB,MAAjB;AAAA,0BAA0BmB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR,aAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,SAAS,MAHb;AAAA,kBAKK1B,QAAQ,CAACwB,GAAT,CAAa,CAACI,OAAD,EAAUF,GAAV,kBACV,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEE;AAAnB,aAAiCF,GAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH;AALL;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAlGuBlC,I;UACcF,kB,EACjBD,W;;;KAFGG,I","sourcesContent":["import MenuCard from \"../MenuCard/MenuCard\"\nimport axios from \"axios\"\nimport { useState, useEffect } from \"react\"\nimport { Button, colors, ListItem, ListItemText, List, Card, CardActions, Box } from \"@material-ui/core\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavBar from \"../NavBar/NavBar\"\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\n\n\n//class should import appstate that contains products\n//loop through each product to create a menucard\nexport default function Menu() {\n    const { appState, setAppState } = useAppStateContext()\n    const navigate = useNavigate()\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [products, setProduct] = useState([])\n    const [active, setActive] = useState({\n        \"Pizza\":false,\n        \"Drink\":false,\n        \"misc\":false\n    })\n    const categories = ['Pizza', 'Drink', 'misc']\n    const checkout = () => {\n        navigate('/cart')\n    }\n\n    const getCat = (e) => {\n        let obj = {}\n        for (const [key, value] of Object.entries(active)) {\n            if( key === e.target.innerHTML){\n                obj[key] = true\n            }\n            else{\n                obj[key] = false\n            }\n        }\n        setActive(obj)\n        const fetchData = async () => {\n            try {\n                const productRes = await apiClient.fetchProductsByCategory({ category: e.target.innerHTML })\n                if (productRes?.data?.products) {\n                    setProduct(productRes.data.products)\n                }\n            } catch (err) {\n                setError(err)\n            }\n        }\n        fetchData()\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true)\n            try {\n                const productRes = await axios.get(\"http://localhost:3001/products/list\")\n                if (productRes?.data?.products) {\n                    setProduct(productRes.data.products)\n                }\n\n            } catch (err) {\n                console.log({ err })\n                setError(err)\n            }\n\n            setIsLoading(false)\n        }\n\n        fetchData()\n    }, [])\n    \n    return (\n        <div>\n            <NavBar></NavBar>\n            <br></br>\n            <Grid container justifyContent=\"space-around\">\n                <Grid item xs={3}>\n                    {categories.map((cat, idx) => (\n                        <Box my={2}>\n                            <Card key={idx}>\n                                {active.cat ?\n                                    <CardActions style={{ backgroundColor: \"#2ed9fb\" }}>\n                                        <Button onClick={getCat}>{cat}</Button>\n                                    </CardActions> :\n                                    <CardActions>\n                                        <Button onClick={getCat}>{cat}</Button>\n                                    </CardActions>}\n                                {/* <CardActions style={{backgroundColor: \"#2ed9fb\"}}>\n                                    <Button onClick={getCat}>{cat}</Button>\n                                </CardActions> */}\n                            </Card>\n                        </Box>\n                    ))}\n                </Grid>\n                <Grid\n                    item\n                    xs={8}\n                    container\n                >\n                    {products.map((product, idx) => (\n                        <Box mx={2}>\n                            <MenuCard product={product} key={idx} />\n                        </Box>\n                    ))}\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}