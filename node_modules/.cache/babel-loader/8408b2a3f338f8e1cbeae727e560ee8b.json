{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kordellschrock/Documents/Github/deployment1Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{set}from\"date-fns\";import{useEffect,useState}from\"react\";import apiClient from'../services/apiClient';export default function useAppState(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState({first_name:\"\",last_name:\"\",email:\"\",is_admin:false,isAuthenticated:false,cart:[],review:[],favorites:[],rewards:0,address:''}),_useState4=_slicedToArray(_useState3,2),appState=_useState4[0],setAppState=_useState4[1];var _useState5=useState({currentOrders:[],pastOrders:[]}),_useState6=_slicedToArray(_useState5,2),vendorState=_useState6[0],setvendorState=_useState6[1];useEffect(function(){var fetchUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$apiClient$fetc,data,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return apiClient.fetchUserFromToken();case 2:_yield$apiClient$fetc=_context.sent;data=_yield$apiClient$fetc.data;error=_yield$apiClient$fetc.error;if(data){console.log(data.publicUser);setAppState(function(a){return _objectSpread(_objectSpread({},a),{},{first_name:data.publicUser.first_name,last_name:data.publicUser.last_name,email:data.publicUser.email,rewards:data.publicUser.rewards,isAuthenticated:true,address:data.publicUser.address});});}if(error)setError(error);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchUser(){return _ref.apply(this,arguments);};}();var token=localStorage.getItem(\"pizza_shop_token\");if(token){apiClient.setToken(token);fetchUser();}},[]);useEffect(function(){var fetchOrders=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$apiClient$getC,data,error;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return apiClient.getCurrentOrders();case 2:_yield$apiClient$getC=_context2.sent;data=_yield$apiClient$getC.data;error=_yield$apiClient$getC.error;if(data){setvendorState(function(a){return _objectSpread(_objectSpread({},a),{},{currentOrders:data.orders});});}if(error)setError(error);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchOrders(){return _ref2.apply(this,arguments);};}();var fetchPastOrders=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$apiClient$getP,data,error;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return apiClient.getPastOrders();case 2:_yield$apiClient$getP=_context3.sent;data=_yield$apiClient$getP.data;error=_yield$apiClient$getP.error;if(data){setvendorState(function(a){return _objectSpread(_objectSpread({},a),{},{pastOrders:data.orders});});}if(error)setError(error);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchPastOrders(){return _ref3.apply(this,arguments);};}();fetchOrders();fetchPastOrders();},[]);// useEffect(() => {\n//   const fetchCart = async () => {\n//     const { data, error } = await apiClient.listCart()\n//     if (data) {\n//       setAppState((a) => (\n//         {\n//           ...a, cart: data.cart\n//         }\n//       ))\n//     }\n//     if (error) setError(error)\n//   }\n//   if (appState.isAuthenticated){\n//     fetchCart()\n//   }\n// }, [appState.isAuthenticated])\n// useEffect(() => {\n//   const fetchRewards = async () => {\n//     const { data, error } = await apiClient.listRewards()\n//     if (data) {\n//       setAppState((a) => (\n//         {\n//           ...a, rewards: data.rewards\n//         }\n//       ))\n//       //   setExercise(data.exercises)\n//     }\n//     if (error) setError(error)\n//   }\n//   if (appState.isAuthenticated){\n//     fetchRewards()\n//   }\n// }, [appState.isAuthenticated])\nreturn{appState:appState,error:error,setAppState:setAppState,setError:setError,vendorState:vendorState,setvendorState:setvendorState};}","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/deployment1Frontend/src/hooks/useAppState.js"],"names":["set","useEffect","useState","apiClient","useAppState","error","setError","first_name","last_name","email","is_admin","isAuthenticated","cart","review","favorites","rewards","address","appState","setAppState","currentOrders","pastOrders","vendorState","setvendorState","fetchUser","fetchUserFromToken","data","console","log","publicUser","a","token","localStorage","getItem","setToken","fetchOrders","getCurrentOrders","orders","fetchPastOrders","getPastOrders"],"mappings":"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","sourcesContent":["import { set } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport apiClient from '../services/apiClient';\n\nexport default function useAppState() {\n  const [error, setError] = useState(null)\n  const [appState, setAppState] = useState({\n    first_name: \"\",\n    last_name:\"\",\n    email:\"\",\n    is_admin:false,\n    isAuthenticated: false,\n    cart: [],\n    review:[],\n    favorites:[],\n    rewards: 0,\n    address:''\n  })\n  \n\n  const [vendorState, setvendorState] = useState({\n    currentOrders: [],\n    pastOrders : []\n  })\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data, error } = await apiClient.fetchUserFromToken()\n      if (data) {\n        console.log(data.publicUser)\n        setAppState((a) => (\n          {\n            ...a, \n            first_name: data.publicUser.first_name, \n            last_name:data.publicUser.last_name,\n            email:data.publicUser.email,\n            rewards:data.publicUser.rewards,\n            isAuthenticated: true,\n            address:data.publicUser.address\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n\n    const token = localStorage.getItem(\"pizza_shop_token\")\n    if (token) {\n      apiClient.setToken(token)\n      fetchUser()\n    }\n  }, [])\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const { data, error } = await apiClient.getCurrentOrders()\n      if (data) {\n        setvendorState((a) => (\n          {\n            ...a, currentOrders: data.orders\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n    const fetchPastOrders = async () => {\n      const { data, error } = await apiClient.getPastOrders()\n      if (data) {\n        setvendorState((a) => (\n          {\n            ...a, pastOrders: data.orders\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n    fetchOrders()\n    fetchPastOrders()\n  }, [])\n\n  // useEffect(() => {\n  //   const fetchCart = async () => {\n  //     const { data, error } = await apiClient.listCart()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, cart: data.cart\n  //         }\n  //       ))\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchCart()\n  //   }\n\n  // }, [appState.isAuthenticated])\n  \n  // useEffect(() => {\n  //   const fetchRewards = async () => {\n  //     const { data, error } = await apiClient.listRewards()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, rewards: data.rewards\n  //         }\n  //       ))\n  //       //   setExercise(data.exercises)\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchRewards()\n  //   }\n\n  // }, [appState.isAuthenticated])\n\n  return { appState, error, setAppState, setError, vendorState, setvendorState }\n}"]},"metadata":{},"sourceType":"module"}