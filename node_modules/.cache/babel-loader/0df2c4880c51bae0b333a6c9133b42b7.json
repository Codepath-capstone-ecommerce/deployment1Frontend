{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport apiClient from '../services/apiClient';\nexport default function useAppState() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [appState, setAppState] = useState({\n    name: null,\n    isAuthenticated: false,\n    cart: [],\n    favorites: [],\n    rewards: 0\n  });\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data,\n        error\n      } = await apiClient.fetchUserFromToken();\n\n      if (data) {\n        setAppState(a => ({ ...a,\n          user: data.user,\n          isAuthenticated: true\n        }));\n      }\n\n      if (error) setError(error);\n    };\n\n    const token = localStorage.getItem(\"pizza_shop_token\");\n\n    if (token) {\n      apiClient.setToken(token);\n      fetchUser();\n    }\n  }, []); // useEffect(() => {\n  //   const fetchCart = async () => {\n  //     const { data, error } = await apiClient.listCart()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, cart: data.cart\n  //         }\n  //       ))\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchCart()\n  //   }\n  // }, [appState.isAuthenticated])\n  // useEffect(() => {\n  //   const fetchRewards = async () => {\n  //     const { data, error } = await apiClient.listRewards()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, rewards: data.rewards\n  //         }\n  //       ))\n  //       //   setExercise(data.exercises)\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchRewards()\n  //   }\n  // }, [appState.isAuthenticated])\n\n  return {\n    appState,\n    error,\n    setAppState,\n    setError\n  };\n}\n\n_s(useAppState, \"JEq44eJ9pyXCZUjSC/wYJDcYDvk=\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/hooks/useAppState.js"],"names":["useEffect","useState","apiClient","useAppState","error","setError","appState","setAppState","name","isAuthenticated","cart","favorites","rewards","fetchUser","data","fetchUserFromToken","a","user","token","localStorage","getItem","setToken"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,IAAI,EAAE,IADiC;AAEvCC,IAAAA,eAAe,EAAE,KAFsB;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,SAAS,EAAC,EAJ6B;AAKvCC,IAAAA,OAAO,EAAE;AAL8B,GAAD,CAAxC;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA,IAAF;AAAQV,QAAAA;AAAR,UAAkB,MAAMF,SAAS,CAACa,kBAAV,EAA9B;;AACA,UAAID,IAAJ,EAAU;AACRP,QAAAA,WAAW,CAAES,CAAD,KACV,EACE,GAAGA,CADL;AACQC,UAAAA,IAAI,EAAEH,IAAI,CAACG,IADnB;AACyBR,UAAAA,eAAe,EAAE;AAD1C,SADU,CAAD,CAAX;AAKD;;AACD,UAAIL,KAAJ,EAAWC,QAAQ,CAACD,KAAD,CAAR;AACZ,KAVD;;AAYA,UAAMc,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACThB,MAAAA,SAAS,CAACmB,QAAV,CAAmBH,KAAnB;AACAL,MAAAA,SAAS;AACV;AACF,GAlBQ,EAkBN,EAlBM,CAAT,CAVoC,CA8BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAO;AAAEP,IAAAA,QAAF;AAAYF,IAAAA,KAAZ;AAAmBG,IAAAA,WAAnB;AAAgCF,IAAAA;AAAhC,GAAP;AACD;;GApEuBF,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport apiClient from '../services/apiClient';\n\nexport default function useAppState() {\n  const [error, setError] = useState(null)\n  const [appState, setAppState] = useState({\n    name: null,\n    isAuthenticated: false,\n    cart: [],\n    favorites:[],\n    rewards: 0,\n  })\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data, error } = await apiClient.fetchUserFromToken()\n      if (data) {\n        setAppState((a) => (\n          {\n            ...a, user: data.user, isAuthenticated: true\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n\n    const token = localStorage.getItem(\"pizza_shop_token\")\n    if (token) {\n      apiClient.setToken(token)\n      fetchUser()\n    }\n  }, [])\n\n  // useEffect(() => {\n  //   const fetchCart = async () => {\n  //     const { data, error } = await apiClient.listCart()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, cart: data.cart\n  //         }\n  //       ))\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchCart()\n  //   }\n\n  // }, [appState.isAuthenticated])\n  \n  // useEffect(() => {\n  //   const fetchRewards = async () => {\n  //     const { data, error } = await apiClient.listRewards()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, rewards: data.rewards\n  //         }\n  //       ))\n  //       //   setExercise(data.exercises)\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchRewards()\n  //   }\n\n  // }, [appState.isAuthenticated])\n\n  return { appState, error, setAppState, setError }\n}"]},"metadata":{},"sourceType":"module"}