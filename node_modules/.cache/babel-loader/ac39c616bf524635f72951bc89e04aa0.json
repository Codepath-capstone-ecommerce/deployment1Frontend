{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Typography, Box, Button, CardContent } from \"@material-ui/core\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; //write function that can send products to a cart once buttons are clicked\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartCard({\n  product\n}) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [img, setImg] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _productRes$data;\n\n        const productRes = await apiClient.fetchProductByName({\n          productName: product\n        });\n\n        if (productRes === null || productRes === void 0 ? void 0 : (_productRes$data = productRes.data) === null || _productRes$data === void 0 ? void 0 : _productRes$data.productResponse[0].img) {\n          setImg(productRes.data.productResponse[0].img);\n        }\n      } catch (err) {\n        console.log({\n          err\n        });\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        width: 100,\n        height: 100,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Item: \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Quantity: \", product.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartCard, \"Yb5DNGEkQcIqjqcuAOIrm7jvAxc=\");\n\n_c = CartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartCard\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js"],"names":["Card","Typography","Box","Button","CardContent","useAppStateContext","apiClient","useState","useEffect","axios","Link","CartCard","product","error","setError","isLoading","setIsLoading","img","setImg","fetchData","productRes","fetchProductByName","productName","data","productResponse","err","console","log","name","quantity"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAuCC,WAAvC,QAA0D,mBAA1D;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;;AACA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMW,SAAS,GAAG,YAAY;AAC1B,UAAI;AAAA;;AACA,cAAMC,UAAU,GAAG,MAAMd,SAAS,CAACe,kBAAV,CAA6B;AAACC,UAAAA,WAAW,EAACV;AAAb,SAA7B,CAAzB;;AACA,YAAIQ,UAAJ,aAAIA,UAAJ,2CAAIA,UAAU,CAAEG,IAAhB,qDAAI,iBAAkBC,eAAlB,CAAkC,CAAlC,EAAqCP,GAAzC,EAA8C;AAC1CC,UAAAA,MAAM,CAACE,UAAU,CAACG,IAAX,CAAgBC,eAAhB,CAAgC,CAAhC,EAAmCP,GAApC,CAAN;AACH;AAEJ,OAND,CAME,OAAOQ,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,UAAAA;AAAF,SAAZ;AACAX,QAAAA,QAAQ,CAACW,GAAD,CAAR;AACH;AAEJ,KAZD;;AAcAN,IAAAA,SAAS;AACZ,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,WAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAe,QAAA,KAAK,EAAE,GAAtB;AAA2B,QAAA,MAAM,EAAE,GAAnC;AAAwC,QAAA,GAAG,EAAEL,OAAO,CAACgB;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,6BAAmBhB,OAAO,CAACgB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAA,iCAAuBhB,OAAO,CAACiB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAlCuBlB,Q;;KAAAA,Q","sourcesContent":["import { Card, Typography, Box, Button,CardContent } from \"@material-ui/core\"\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\n//write function that can send products to a cart once buttons are clicked\nexport default function CartCard({ product }) {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [img, setImg] = useState([])\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const productRes = await apiClient.fetchProductByName({productName:product})\n                if (productRes?.data?.productResponse[0].img) {\n                    setImg(productRes.data.productResponse[0].img)\n                }\n\n            } catch (err) {\n                console.log({ err })\n                setError(err)\n            }\n\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <Card>\n            <CardContent>\n                <img src={img} width={100} height={100} alt={product.name}></img>\n                <Typography>Item: {product.name}</Typography>\n                <Typography>Quantity: {product.quantity}</Typography>\n            </CardContent>\n\n        </Card>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}