{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js\",\n    _s = $RefreshSig$();\n\nimport minus_sign from \"../../assets/minus_sign.svg\";\nimport plus_sign from \"../../assets/plus_sign.svg\";\nimport { Card, Typography, Box, Button, CardContent, CardMedia } from \"@material-ui/core\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; //write function that can send products to a cart once buttons are clicked\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartCard({\n  product\n}) {\n  _s();\n\n  const {\n    appState,\n    setAppState\n  } = useAppStateContext();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [img, setImg] = useState([]);\n  const [price, setPrice] = useState(0);\n  const check = appState.review[appState.review.findIndex(products => products.name === product.name)];\n  const initialize = check ? check.quantity : product.quantity;\n  const [quantity, setQuantity] = useState(initialize);\n\n  const increment = () => {\n    setQuantity(q => q + 1);\n  };\n\n  const decrement = () => {\n    if (quantity !== 0) {\n      setQuantity(q => q - 1);\n    }\n  }; //there's a bug with this useffect\n  // useEffect(() => {\n  //     const updateCart = () => {\n  //         let newCart = []\n  //         console.log(appState.review)\n  //         for (let i = 0; i < appState.review.length; i++) {\n  //             for (let j = 0; j < appState.review[i].quantity; j++) {\n  //                 newCart.push(appState.review[i].name)\n  //             }\n  //         }\n  //         return newCart\n  //     }\n  //     const newCart = updateCart()\n  //     console.log(newCart)\n  //     setAppState((a) => ({\n  //         ...a,\n  //         cart: newCart\n  //     }))\n  // },[appState.review])\n\n\n  useEffect(() => {\n    const updateReview = () => {\n      const name = product.name;\n      const elementsIndex = appState.review.findIndex(product => product.name === name);\n      let newArray = [...appState.review];\n\n      if (newArray.length) {\n        newArray[elementsIndex].quantity = quantity;\n        setAppState(a => ({ ...a,\n          review: newArray\n        }));\n      }\n    };\n\n    updateReview();\n  }, [quantity]); // console.log(appState.cart)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _productRes$data, _productRes$data2;\n\n        const productRes = await apiClient.fetchProductByName({\n          productName: product\n        });\n\n        if (productRes === null || productRes === void 0 ? void 0 : (_productRes$data = productRes.data) === null || _productRes$data === void 0 ? void 0 : _productRes$data.productResponse[0].img) {\n          setImg(productRes.data.productResponse[0].img);\n        }\n\n        if (productRes === null || productRes === void 0 ? void 0 : (_productRes$data2 = productRes.data) === null || _productRes$data2 === void 0 ? void 0 : _productRes$data2.productResponse[0].price) {\n          setPrice(productRes.data.productResponse[0].price);\n        }\n\n        let obj = {};\n        obj['name'] = product.name;\n        obj['price'] = productRes.data.productResponse[0].price;\n        obj['img'] = productRes.data.productResponse[0].img;\n        obj['quantity'] = quantity;\n        let copy = true; // review = [{name:\"pizza\",'price':2,'img':imgurl,'quantity':3}]\n        // let existReview = appState.review.find((review) => review.name === product.name)\n        // console.log(existReview)\n\n        for (let i = 0; appState.review.length; i++) {\n          if (appState.review[i].name === product.name) {\n            copy = false;\n          }\n        }\n\n        if (copy) {\n          setAppState(a => ({ ...a,\n            review: [...a.review, obj]\n          }));\n        }\n      } catch (err) {\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        width: 150,\n        height: 150,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Item: \", product.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Total: $\", product.quantity * price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            onClick: () => decrement(),\n            id: \"image\",\n            height: \"25px\",\n            width: \"25px\",\n            alt: \"minus sign\",\n            src: minus_sign\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            onClick: () => increment(),\n            id: \"image\",\n            height: \"25px\",\n            width: \"25px\",\n            alt: \"plus sign\",\n            src: plus_sign\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartCard, \"0HavaYfUFI64KCuFDlWMZLS97eo=\", false, function () {\n  return [useAppStateContext];\n});\n\n_c = CartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartCard\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js"],"names":["Card","Typography","Box","Button","CardContent","CardMedia","useAppStateContext","apiClient","useState","useEffect","axios","Link","CartCard","product","appState","setAppState","error","setError","isLoading","setIsLoading","img","setImg","price","setPrice","check","review","findIndex","products","name","initialize","quantity","setQuantity","increment","q","decrement","updateReview","elementsIndex","newArray","length","a","fetchData","productRes","fetchProductByName","productName","data","productResponse","obj","copy","i","err","minus_sign","plus_sign"],"mappings":"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","sourcesContent":["import minus_sign from \"../../assets/minus_sign.svg\"\nimport plus_sign from \"../../assets/plus_sign.svg\"\nimport { Card, Typography, Box, Button, CardContent, CardMedia } from \"@material-ui/core\"\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\n\n//write function that can send products to a cart once buttons are clicked\nexport default function CartCard({ product }) {\n    const { appState, setAppState } = useAppStateContext()\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [img, setImg] = useState([])\n    const [price, setPrice] = useState(0)\n    const check = appState.review[appState.review.findIndex(products => products.name === product.name)]\n    const initialize = check ? check.quantity : product.quantity\n    const [quantity, setQuantity] = useState(initialize);\n\n\n    const increment = () => {\n        setQuantity((q) => (q + 1))\n    }\n\n\n    const decrement = () => {\n        if (quantity !== 0) {\n            setQuantity((q) => (q - 1))\n        }\n    }\n\n    //there's a bug with this useffect\n    // useEffect(() => {\n    //     const updateCart = () => {\n    //         let newCart = []\n    //         console.log(appState.review)\n    //         for (let i = 0; i < appState.review.length; i++) {\n    //             for (let j = 0; j < appState.review[i].quantity; j++) {\n    //                 newCart.push(appState.review[i].name)\n    //             }\n\n    //         }\n    //         return newCart\n    //     }\n\n    //     const newCart = updateCart()\n    //     console.log(newCart)\n\n    //     setAppState((a) => ({\n    //         ...a,\n    //         cart: newCart\n    //     }))\n    // },[appState.review])\n\n    useEffect(() => {\n        const updateReview = () => {\n            const name = product.name\n            const elementsIndex = appState.review.findIndex(product => product.name === name)\n            let newArray = [...appState.review]\n            if (newArray.length) {\n                newArray[elementsIndex].quantity = quantity\n                setAppState((a) => (\n                    {\n                        ...a,\n                        review: newArray\n                    }\n                ))\n            }\n\n        }\n        updateReview()\n    }, [quantity])\n\n    // console.log(appState.cart)\n    useEffect(() => {\n\n\n        const fetchData = async () => {\n            try {\n                const productRes = await apiClient.fetchProductByName({ productName: product })\n                if (productRes?.data?.productResponse[0].img) {\n                    setImg(productRes.data.productResponse[0].img)\n                }\n                if (productRes?.data?.productResponse[0].price) {\n                    setPrice(productRes.data.productResponse[0].price)\n                }\n                let obj = {}\n                obj['name'] = product.name\n                obj['price'] = productRes.data.productResponse[0].price\n                obj['img'] = productRes.data.productResponse[0].img\n                obj['quantity'] = quantity\n\n                let copy = true\n                // review = [{name:\"pizza\",'price':2,'img':imgurl,'quantity':3}]\n                // let existReview = appState.review.find((review) => review.name === product.name)\n                // console.log(existReview)\n                for (let i = 0; appState.review.length; i++) {\n                    if (appState.review[i].name === product.name) {\n                        copy = false\n                    }\n                }\n                if (copy) {\n                    setAppState((a) => (\n                        {\n                            ...a,\n                            review: [...a.review, obj]\n                        }\n                    ))\n                }\n\n\n            } catch (err) {\n                setError(err)\n            }\n\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <Card>\n            {/* <CardMedia image={img} alt={product.name} height={200} width={150}></CardMedia> */}\n            <CardContent>\n                {/* <CardMedia image={img} alt={product.name}></CardMedia> */}\n                <img src={img} width={150} height={150} alt={product.name}></img>\n                <div>\n                    <Typography>Item: {product.name}</Typography>\n                    <Typography>Total: ${product.quantity * price}</Typography>\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                        <input type=\"image\" onClick={() => decrement()} id=\"image\" height=\"25px\" width=\"25px\" alt=\"minus sign\" src={minus_sign}></input>\n                        <Typography>{quantity}</Typography>\n                        <input type=\"image\" onClick={() => increment()} id=\"image\" height=\"25px\" width=\"25px\" alt=\"plus sign\" src={plus_sign}></input>\n                    </Box>\n                </div>\n\n            </CardContent>\n\n        </Card>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}