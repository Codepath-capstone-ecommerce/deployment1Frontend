{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/SignUp/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport { Box, Grid, Paper, Avatar, TextField, Typography, Link } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useEffect, useState } from \"react\";\nimport apiClient from '../../services/apiClient';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const navigate = useNavigate();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    address: \"\"\n  });\n\n  const handleOnInputChange = event => {\n    setForm(f => ({ ...f,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = async () => {\n    setIsProcessing(true);\n    setErrors(e => ({ ...e,\n      form: null\n    }));\n    const {\n      data,\n      error\n    } = await apiClient.signupUser({\n      username: form.username,\n      password: form.password,\n      email: form.email,\n      first_name: form.first_name,\n      last_name: form.last_name,\n      address: form.address\n    });\n\n    if (error) {\n      setErrors(e => ({ ...e,\n        form: error\n      }));\n    }\n\n    setIsProcessing(false);\n    navigate(\"/login\");\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: \"70vh\",\n    width: 280,\n    margin: \"20px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"username\",\n        label: \"Username\",\n        placeholder: \"Enter username\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"email\",\n        label: \"Email\",\n        placeholder: \"Enter email\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"password\",\n        label: \"Password\",\n        placeholder: \"Enter a password\",\n        type: \"password\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"first_name\",\n        label: \"First Name\",\n        placeholder: \"Enter first name\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"last_name\",\n        label: \"Last Name\",\n        placeholder: \"Enter last name\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleOnInputChange,\n        name: \"address\",\n        label: \"address\",\n        placeholder: \"Enter your address\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOnSubmit,\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"U2c8WOyt6WeNHQHJ4/aoduwG9xQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/SignUp/SignUp.js"],"names":["Button","Box","Grid","Paper","Avatar","TextField","Typography","Link","FormControlLabel","Checkbox","useEffect","useState","apiClient","LockOutlinedIcon","useNavigate","SignUp","navigate","isProcessing","setIsProcessing","errors","setErrors","form","setForm","username","password","email","first_name","last_name","address","handleOnInputChange","event","f","target","name","value","handleOnSubmit","e","data","error","signupUser","paperStyle","padding","height","width","margin"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport {Box, Grid, Paper ,Avatar, TextField, Typography, Link} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useEffect, useState } from \"react\"\nimport apiClient from '../../services/apiClient';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from \"react-router-dom\"\n\nexport default function SignUp(){\n    const navigate = useNavigate()\n    const [isProcessing, setIsProcessing] = useState(false)\n    const [errors, setErrors] = useState({})\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\",\n        email:\"\",\n        first_name:\"\",\n        last_name:\"\",\n        address:\"\"\n    })\n\n\n    const handleOnInputChange = (event) => {\n        setForm((f) => ({ ...f, [event.target.name]: event.target.value }))\n    }\n\n    const handleOnSubmit = async () => {\n        setIsProcessing(true)\n        setErrors((e) => ({ ...e, form: null }))\n\n        const {data, error } = await apiClient.signupUser(\n            {\n                username: form.username, \n                password: form.password, \n                email: form.email,\n                first_name:form.first_name, \n                last_name:form.last_name,\n                address:form.address\n            })\n        if (error){\n          setErrors((e) => ({ ...e, form:error}))\n        }\n\n        setIsProcessing(false)\n        navigate(\"/login\")\n      }\n\n    const paperStyle = {\n        padding:20,\n        height:\"70vh\",\n        width:280,\n        margin:\"20px auto\"\n    }\n    return(\n        <Grid>\n            <Paper elevation = {10} style= {paperStyle}>\n                <Grid align = \"center\">\n                    <Avatar>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <h2>\n                        Sign Up\n                    </h2>\n                </Grid>\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"username\"\n                    label = \"Username\" \n                    placeholder = \"Enter username\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"email\"\n                    label = \"Email\" \n                    placeholder = \"Enter email\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"password\"\n                    label = \"Password\" \n                    placeholder = \"Enter a password\" \n                    type = \"password\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"first_name\"\n                    label = \"First Name\" \n                    placeholder = \"Enter first name\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"last_name\"\n                    label = \"Last Name\" \n                    placeholder = \"Enter last name\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"address\"\n                    label = \"address\" \n                    placeholder = \"Enter your address\" \n                    fullWidth\n                />\n                <Button \n                    onClick={handleOnSubmit}\n                    type = 'submit' \n                    variant = \"contained\" \n                    color = 'primary' \n                    fullWidth\n                    >Sign Up\n                </Button>\n            </Paper>\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}