{"ast":null,"code":"var _jsxFileName = \"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserDrawer/UserDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function UserDrawer() {\n  _s();\n\n  const {\n    appState\n  } = useAppStateContext();\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: ['My Rewards', 'My Profile'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 58\n          }, this) : /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer('right', true),\n      variant: \"outlined\",\n      children: appState.first_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'right',\n      open: state['right'],\n      onClose: toggleDrawer('right', false),\n      children: list('right')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, appState.first_name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserDrawer, \"O/KkbGTllVJM8IZ9HjaFC4U9ww4=\", false, function () {\n  return [useAppStateContext, useStyles];\n});\n\n_c = UserDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDrawer\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserDrawer/UserDrawer.js"],"names":["React","clsx","makeStyles","Drawer","Button","List","ListItem","AttachMoneyIcon","AccountCircleIcon","ListItemIcon","ListItemText","useAppStateContext","useStyles","list","width","fullList","UserDrawer","appState","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","map","text","index","first_name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useAppStateContext } from '../../contexts/appStateContext';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function UserDrawer() {\n    const { appState } = useAppStateContext()\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['My Rewards', 'My Profile'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <AttachMoneyIcon /> : <AccountCircleIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <React.Fragment key={appState.first_name}>\n            <Button onClick={toggleDrawer('right', true)} variant=\"outlined\">{appState.first_name}</Button>\n            <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n                {list('right')}\n            </Drawer>\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}