{"ast":null,"code":"import axios from \"axios\";\n\nclass ApiClient {\n  constructor(remoteHostUrl) {\n    this.remoteHostUrl = remoteHostUrl;\n    this.token = null;\n    this.tokenName = \"pizza_shop_token\";\n  }\n\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(this.tokenName, token);\n  }\n\n  async request({\n    endpoint,\n    method = 'GET',\n    data = {}\n  }) {\n    const url = `${this.remoteHostUrl}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (this.token) {\n      headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n\n    try {\n      const res = await axios({\n        url,\n        method,\n        data,\n        headers\n      });\n      return {\n        data: res.data,\n        error: null\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n\n      console.error({\n        errorResponse: error.response\n      });\n      const message = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message;\n      return {\n        data: null,\n        error: message || String(error)\n      };\n    }\n  }\n\n  async fetchProductByName(data) {\n    return await this.request({\n      endpoint: 'products/byName',\n      method: \"POST\",\n      data: data\n    });\n  }\n\n  async getWeeklyCustomers(data) {\n    return await this.request({\n      endpoint: 'admin/weeklycustomers',\n      method: \"POST\",\n      data: data\n    });\n  }\n\n  async getWeeklyOrders(data) {\n    return await this.request({\n      endpoint: 'admin/weeklyorders',\n      method: \"POST\",\n      data: data\n    });\n  }\n\n  async getCurrentOrders() {\n    return await this.request({\n      endpoint: 'order/current',\n      method: \"GET\"\n    });\n  }\n\n  async getOrderByID(id) {\n    return await this.request({\n      endpoint: 'order/detailByID',\n      method: \"GET\",\n      params: {\n        orderId: id\n      }\n    });\n  }\n\n  async updateOrderDetail(id) {\n    return await this.request({\n      endpoint: 'order/detailByID/complete',\n      method: 'POST',\n      params: {\n        orderId: id\n      }\n    });\n  }\n\n  async createOrder(data) {\n    return await this.request({\n      endpoint: 'order/create',\n      method: \"POST\",\n      data: data\n    });\n  }\n\n  async listProducts() {\n    return await this.request({\n      endpoint: 'products/get',\n      method: \"GET\"\n    });\n  }\n\n  async listCart() {\n    return await this.request({\n      endpoint: 'products/cart',\n      method: \"GET\"\n    });\n  }\n\n  async fetchUserFromToken() {\n    return await this.request({\n      endpoint: 'auth/me',\n      method: \"GET\"\n    });\n  }\n\n  async loginUser(credentials) {\n    return await this.request({\n      endpoint: 'auth/login',\n      method: 'POST',\n      data: credentials\n    });\n  }\n\n  async signupUser(credentials) {\n    return await this.request({\n      endpoint: 'auth/register',\n      method: 'POST',\n      data: credentials\n    });\n  }\n\n  async logoutUser() {\n    this.setToken(null);\n    localStorage.setItem(this.tokenName, \"\");\n  }\n\n}\n\nexport default new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\");","map":{"version":3,"sources":["/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/services/apiClient.js"],"names":["axios","ApiClient","constructor","remoteHostUrl","token","tokenName","setToken","localStorage","setItem","request","endpoint","method","data","url","headers","res","error","console","errorResponse","response","message","String","fetchProductByName","getWeeklyCustomers","getWeeklyOrders","getCurrentOrders","getOrderByID","id","params","orderId","updateOrderDetail","createOrder","listProducts","listCart","fetchUserFromToken","loginUser","credentials","signupUser","logoutUser","process","env","REACT_APP_REMOTE_HOST_URL"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nclass ApiClient {\n  constructor(remoteHostUrl) {\n    this.remoteHostUrl = remoteHostUrl\n    this.token = null\n    this.tokenName = \"pizza_shop_token\"\n  }\n\n  setToken(token) {\n    this.token = token\n    localStorage.setItem(this.tokenName, token)\n  }\n\n  async request({ endpoint, method = 'GET', data = {} }) {\n\n    const url = `${this.remoteHostUrl}/${endpoint}`\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    }\n\n    if (this.token) {\n      headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n\n    try {\n      const res = await axios({ url, method, data, headers })\n      return { data: res.data, error: null }\n    } catch (error) {\n      console.error({ errorResponse: error.response })\n      const message = error?.response?.data?.error?.message\n      return { data: null, error: message || String(error) }\n    }\n  }\n\n  async fetchProductByName(data){\n    return await this.request({ endpoint: 'products/byName', method: \"POST\", data:data})\n  }\n\n  async getWeeklyCustomers(data) {\n    return await this.request({ endpoint: 'admin/weeklycustomers', method: \"POST\", data:data})\n  }\n\n  async getWeeklyOrders(data) {\n    return await this.request({ endpoint: 'admin/weeklyorders', method: \"POST\", data:data})\n  }\n\n  async getCurrentOrders(){\n    return await this.request({endpoint:'order/current', method:\"GET\"})\n  }\n\n  async getOrderByID(id){\n    return await this.request({endpoint:'order/detailByID', method:\"GET\", params: {orderId: id} })\n  }\n\n  async updateOrderDetail(id) {\n    return await this.request({ endpoint: 'order/detailByID/complete', method: 'POST', params: {orderId: id} })\n  }\n\n  async createOrder(data) {\n    return await this.request({ endpoint: 'order/create', method: \"POST\", data:data})\n  }\n\n  async listProducts() {\n    return await this.request({ endpoint: 'products/get', method: \"GET\" })\n  }\n\n  async listCart() {\n    return await this.request({ endpoint: 'products/cart', method: \"GET\" })\n  }\n\n  async fetchUserFromToken() {\n    return await this.request({ endpoint: 'auth/me', method: \"GET\" })\n  }\n\n  async loginUser(credentials) {\n    return await this.request({ endpoint: 'auth/login', method: 'POST', data: credentials })\n  }\n\n  async signupUser(credentials) {\n    return await this.request({ endpoint: 'auth/register', method: 'POST', data: credentials })\n  }\n\n  async logoutUser() {\n    this.setToken(null)\n    localStorage.setItem(this.tokenName, \"\")\n  }\n}\n\nexport default new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\")"]},"metadata":{},"sourceType":"module"}